from typing import List, Optional, Dict, Any
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from .base import BaseKeyboard


class ConfirmationKeyboard(BaseKeyboard):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π"""

    @staticmethod
    def create_yes_no(
        yes_text: str = "‚úÖ –î–∞",
        no_text: str = "‚ùå –ù–µ—Ç",
        yes_callback: str = "confirm_yes",
        no_callback: str = "confirm_no",
        additional_buttons: Optional[List[List[InlineKeyboardButton]]] = None,
    ) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –î–∞/–ù–µ—Ç"""
        buttons = [
            [
                InlineKeyboardButton(text=yes_text, callback_data=yes_callback),
                InlineKeyboardButton(text=no_text, callback_data=no_callback),
            ]
        ]

        if additional_buttons:
            buttons.extend(additional_buttons)

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def create_confirmation_with_back(
        confirm_text: str = "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
        cancel_text: str = "‚ùå –û—Ç–º–µ–Ω–∞",
        back_text: str = "‚óÄÔ∏è –ù–∞–∑–∞–¥",
        confirm_callback: str = "confirm",
        cancel_callback: str = "cancel",
        back_callback: str = "back",
    ) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥"""
        buttons = [
            [
                InlineKeyboardButton(text=confirm_text, callback_data=confirm_callback),
                InlineKeyboardButton(text=cancel_text, callback_data=cancel_callback),
            ],
            [InlineKeyboardButton(text=back_text, callback_data=back_callback)],
        ]

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def create_delete_confirmation(
        item_name: str = "",
        delete_callback: str = "delete_confirm",
        cancel_callback: str = "delete_cancel",
    ) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è"""
        if item_name:
            delete_text = f"üóëÔ∏è –£–¥–∞–ª–∏—Ç—å '{item_name}'"
        else:
            delete_text = "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å"

        buttons = [
            [
                InlineKeyboardButton(text=delete_text, callback_data=delete_callback),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback),
            ]
        ]

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def create_multi_choice(
        choices: Dict[str, str],
        cancel_text: str = "‚ùå –û—Ç–º–µ–Ω–∞",
        cancel_callback: str = "cancel",
        columns: int = 1,
    ) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤"""
        choice_items = [
            {"text": text, "callback_data": callback}
            for text, callback in choices.items()
        ]

        def item_to_button(item):
            return InlineKeyboardButton(
                text=item["text"], callback_data=item["callback_data"]
            )

        button_rows = BaseKeyboard.create_columns_layout(
            choice_items, columns, item_to_button
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
        button_rows.append(
            [InlineKeyboardButton(text=cancel_text, callback_data=cancel_callback)]
        )

        return InlineKeyboardMarkup(inline_keyboard=button_rows)


class ActionConfirmation:
    """–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"""

    @staticmethod
    def create_save_confirmation(
        save_callback: str = "save_confirm",
        discard_callback: str = "save_discard",
        continue_callback: str = "save_continue",
    ) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π"""
        buttons = [
            [
                InlineKeyboardButton(text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data=save_callback),
                InlineKeyboardButton(text="üóëÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=discard_callback),
            ],
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data=continue_callback
                )
            ],
        ]

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def create_overwrite_confirmation(
        overwrite_callback: str = "overwrite_confirm",
        rename_callback: str = "overwrite_rename",
        cancel_callback: str = "overwrite_cancel",
    ) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞/—ç–ª–µ–º–µ–Ω—Ç–∞"""
        buttons = [
            [
                InlineKeyboardButton(
                    text="üîÑ –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å", callback_data=overwrite_callback
                ),
                InlineKeyboardButton(
                    text="üìù –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", callback_data=rename_callback
                ),
            ],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback)],
        ]

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def create_publish_confirmation(
        publish_callback: str = "publish_confirm",
        draft_callback: str = "publish_draft",
        cancel_callback: str = "publish_cancel",
    ) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
        buttons = [
            [
                InlineKeyboardButton(
                    text="üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data=publish_callback
                ),
                InlineKeyboardButton(
                    text="üìù –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫", callback_data=draft_callback
                ),
            ],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback)],
        ]

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def create_reset_confirmation(
        reset_callback: str = "reset_confirm",
        backup_callback: str = "reset_backup",
        cancel_callback: str = "reset_cancel",
    ) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        buttons = [
            [
                InlineKeyboardButton(text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å", callback_data=reset_callback),
                InlineKeyboardButton(
                    text="üíæ –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é", callback_data=backup_callback
                ),
            ],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback)],
        ]

        return InlineKeyboardMarkup(inline_keyboard=buttons)


class ConditionalConfirmation:
    """–£—Å–ª–æ–≤–Ω—ã–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π"""

    @staticmethod
    def create_conditional_delete(
        has_dependencies: bool = False,
        force_delete_callback: str = "force_delete",
        safe_delete_callback: str = "safe_delete",
        cancel_callback: str = "delete_cancel",
    ) -> InlineKeyboardMarkup:
        """–£—Å–ª–æ–≤–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"""
        if has_dependencies:
            buttons = [
                [
                    InlineKeyboardButton(
                        text="‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–∏—Ç—å",
                        callback_data=force_delete_callback,
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üîó –£–¥–∞–ª–∏—Ç—å —Å–≤—è–∑–∏ –∏ —É–¥–∞–ª–∏—Ç—å",
                        callback_data=safe_delete_callback,
                    )
                ],
                [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback)],
            ]
        else:
            buttons = [
                [
                    InlineKeyboardButton(
                        text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=safe_delete_callback
                    ),
                    InlineKeyboardButton(
                        text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback
                    ),
                ]
            ]

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def create_permission_request(
        request_callback: str = "permission_request",
        skip_callback: str = "permission_skip",
        cancel_callback: str = "permission_cancel",
    ) -> InlineKeyboardMarkup:
        """–ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ"""
        buttons = [
            [
                InlineKeyboardButton(
                    text="üîë –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data=request_callback
                ),
                InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=skip_callback),
            ],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback)],
        ]

        return InlineKeyboardMarkup(inline_keyboard=buttons)


class TimedConfirmation:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏"""

    @staticmethod
    def create_timed_action(
        action_text: str,
        action_callback: str,
        time_left: int,
        cancel_callback: str = "timed_cancel",
    ) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å –æ—Å—Ç–∞–≤—à–∏–º—Å—è –≤—Ä–µ–º–µ–Ω–µ–º"""
        time_text = f"‚è±Ô∏è {action_text} ({time_left}—Å)"

        buttons = [
            [
                InlineKeyboardButton(text=time_text, callback_data=action_callback),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback),
            ]
        ]

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def create_countdown_warning(
        warning_text: str,
        proceed_callback: str = "countdown_proceed",
        abort_callback: str = "countdown_abort",
    ) -> InlineKeyboardMarkup:
        """–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å –æ–±—Ä–∞—Ç–Ω—ã–º –æ—Ç—Å—á—ë—Ç–æ–º"""
        buttons = [
            [InlineKeyboardButton(text=f"‚ö†Ô∏è {warning_text}", callback_data="noop")],
            [
                InlineKeyboardButton(
                    text="‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data=proceed_callback
                ),
                InlineKeyboardButton(text="üõë –ü—Ä–µ—Ä–≤–∞—Ç—å", callback_data=abort_callback),
            ],
        ]

        return InlineKeyboardMarkup(inline_keyboard=buttons)


def create_simple_confirmation(
    message: str, confirm_callback: str = "confirm", cancel_callback: str = "cancel"
) -> tuple[str, InlineKeyboardMarkup]:
    """
    –£–¥–æ–±–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è

    Returns:
        tuple: (message, keyboard)
    """
    keyboard = ConfirmationKeyboard.create_yes_no(
        yes_callback=confirm_callback, no_callback=cancel_callback
    )
    return message, keyboard


def create_deletion_warning(
    item_name: str,
    delete_callback: str = "delete_confirm",
    cancel_callback: str = "delete_cancel",
) -> tuple[str, InlineKeyboardMarkup]:
    """
    –°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏

    Returns:
        tuple: (warning_message, keyboard)
    """
    message = (
        f"‚ö†Ô∏è <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è</b>\n\n"
        f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å: <b>{item_name}</b>?\n\n"
        f"<i>–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!</i>"
    )

    keyboard = ConfirmationKeyboard.create_delete_confirmation(
        item_name=item_name,
        delete_callback=delete_callback,
        cancel_callback=cancel_callback,
    )

    return message, keyboard
