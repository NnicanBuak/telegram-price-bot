[tool.poetry]
name = "telegram-price-bot"
version = "1.0.0"
description = "Telegram бот для рассылки прайс-листов по группам чатов"
authors = ["NnicanBuak <nnicanbuak@gmail.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/NnicanBuak/telegram-price-bot"
repository = "https://github.com/NnicanBuak/telegram-price-bot"
keywords = ["telegram", "bot", "price", "mailing", "aiogram"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
aiogram = "^3.21.0"
aiohttp = "^3.12.0"
python-dotenv = "^1.0.0"
sqlalchemy = "^2.0.0"
aiosqlite = "^0.20.0"
pydantic = "^2.0.0"
typing-extensions = "^4.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.24.0"
pytest-cov = "^6.0.0"
pytest-timeout = "^2.0.0"
pytest-mock = "^3.0.0"
pytest-xdist = "^3.0.0"
black = "^24.0.0"
flake8 = "^7.0.0"
isort = "^5.13.0"
mypy = "^1.13.0"
pre-commit = "^4.0.0"
bandit = "^1.7.0"
safety = "^3.0.0"
faker = "^33.0.0"
factory-boy = "^3.0.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.0.0"
sphinx-rtd-theme = "^3.0.0"
sphinx-autodoc-typehints = "^2.0.0"

[tool.poetry.scripts]
telegram-price-bot = "src.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Конфигурация Black
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

# Конфигурация isort
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
skip = ["migrations", ".venv", "venv"]

# Конфигурация pytest
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers", 
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-config=pyproject.toml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow tests",
    "asyncio: Asynchronous tests",
    "database: Database tests",
    "api: API tests",
    "menu: Menu system tests",
]
asyncio_mode = "auto"
timeout = 30
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

# Конфигурация coverage
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py", 
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/.venv/*",
    "setup.py",
    "*/migrations/*",
    "*/config/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError", 
    "if 0:",
    "if False:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    "if TYPE_CHECKING:",
    "@overload",
    "logger.debug",
    "logger.error",
]
precision = 2
skip_covered = false
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

# Конфигурация mypy
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "aiogram.*",
    "aiohttp.*",
    "sqlalchemy.*",
    "pytest.*",
]
ignore_missing_imports = true

# Конфигурация bandit
[tool.bandit]
exclude_dirs = ["tests", "test", ".venv", "venv"]
skips = ["B101", "B601"]