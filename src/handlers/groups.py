import logging
from aiogram import Router, F, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from menu import menu_handler

logger = logging.getLogger(__name__)


def get_router(deps) -> Router:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–æ—É—Ç–µ—Ä —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –≥—Ä—É–ø–ø"""
    router = Router()

    @menu_handler(deps.menu_manager, "groups_create")
    async def create_group(callback: types.CallbackQuery, context: dict):
        """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É"""
        await callback.message.edit_text(
            "‚ûï <b>–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —á–∞—Ç–æ–≤</b>\n\n"
            "–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
            parse_mode="HTML",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="menu_groups")]
                ]
            ),
        )
        await callback.answer()

    @menu_handler(deps.menu_manager, "groups_list")
    async def list_groups(callback: types.CallbackQuery, context: dict):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø"""
        try:
            groups = await deps.database.get_chat_groups()

            if not groups:
                text = "üë• <b>–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø —á–∞—Ç–æ–≤</b>\n\n‚ùå –ì—Ä—É–ø–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            else:
                text = f"üë• <b>–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø —á–∞—Ç–æ–≤</b>\n\nüìä –ù–∞–π–¥–µ–Ω–æ: {len(groups)}\n\n"
                for group in groups[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                    text += f"üë• {group.name} ({len(group.chat_ids)} —á–∞—Ç–æ–≤)\n"

                if len(groups) > 5:
                    text += f"\n... –∏ –µ—â–µ {len(groups) - 5} –≥—Ä—É–ø–ø"

            await callback.message.edit_text(
                text,
                parse_mode="HTML",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[
                        [
                            InlineKeyboardButton(
                                text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="menu_groups"
                            )
                        ]
                    ]
                ),
            )
            await callback.answer()

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø: {e}")
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞", show_alert=True)

    return router
