import logging
from aiogram import Router, F, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from menu import menu_handler

logger = logging.getLogger(__name__)


def get_router(deps) -> Router:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–æ—É—Ç–µ—Ä —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ —Ä–∞—Å—Å—ã–ª–∫–∏"""
    router = Router()

    @menu_handler(deps.menu_manager, "mailing_create")
    async def create_mailing(callback: types.CallbackQuery, context: dict):
        """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É"""
        await callback.message.edit_text(
            "üìÆ <b>–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏</b>\n\n"
            "–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
            parse_mode="HTML",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="menu_mailing")]
                ]
            ),
        )
        await callback.answer()

    @menu_handler(deps.menu_manager, "mailings_history")
    async def show_mailings_history(callback: types.CallbackQuery, context: dict):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–∞—Å—Å—ã–ª–æ–∫"""
        try:
            mailings = await deps.database.get_mailings_history(limit=10)

            if not mailings:
                text = "üìä <b>–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫</b>\n\n‚ùå –†–∞—Å—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            else:
                text = f"üìä <b>–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫</b>\n\nüìä –ù–∞–π–¥–µ–Ω–æ: {len(mailings)}\n\n"
                for mailing in mailings[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                    status_icon = {
                        "pending": "‚è≥",
                        "running": "üîÑ",
                        "completed": "‚úÖ",
                        "failed": "‚ùå",
                    }.get(mailing.status, "‚ùì")

                    text += f"{status_icon} ID {mailing.id} | {mailing.status}\n"
                    text += (
                        f"üìä {mailing.sent_count}/{mailing.total_chats} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\n\n"
                    )

                if len(mailings) > 5:
                    text += f"... –∏ –µ—â–µ {len(mailings) - 5} —Ä–∞—Å—Å—ã–ª–æ–∫"

            await callback.message.edit_text(
                text,
                parse_mode="HTML",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[
                        [
                            InlineKeyboardButton(
                                text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="mailings_history"
                            )
                        ],
                        [
                            InlineKeyboardButton(
                                text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="menu_mailing"
                            )
                        ],
                    ]
                ),
            )
            await callback.answer()

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞—Å—Å—ã–ª–æ–∫: {e}")
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏", show_alert=True)

    return router
