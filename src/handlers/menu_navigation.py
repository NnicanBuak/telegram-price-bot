import logging
from aiogram import Router, F, types
from menu import MenuBuilder, create_crud_menu

logger = logging.getLogger(__name__)


def setup_menus(menu_manager) -> None:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ–Ω—é —Å–∏—Å—Ç–µ–º—ã"""

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    main_menu = (
        MenuBuilder("main")
        .title("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        .description(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Telegram Price Bot!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é:"
        )
        .add_menu_link("üìÑ –®–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π", "templates")
        .add_menu_link("üë• –ì—Ä—É–ø–ø—ã —á–∞—Ç–æ–≤", "groups")
        .add_menu_link("üìÆ –†–∞—Å—Å—ã–ª–∫–∞", "mailing")
        .add_action("üìä –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫", "mailings_history")
        .add_menu_link("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "settings")
        .no_back_button()
        .build()
    )

    # CRUD –º–µ–Ω—é –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤
    templates_menu = (
        create_crud_menu("templates", "üìÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏")
        .back_button("main")
        .build()
    )

    # CRUD –º–µ–Ω—é –¥–ª—è –≥—Ä—É–ø–ø
    groups_menu = (
        create_crud_menu("groups", "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏ —á–∞—Ç–æ–≤")
        .back_button("main")
        .build()
    )

    # –ú–µ–Ω—é —Ä–∞—Å—Å—ã–ª–∫–∏
    mailing_menu = (
        MenuBuilder("mailing")
        .title("üìÆ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π")
        .description(
            "–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ –≥—Ä—É–ø–ø–∞–º —á–∞—Ç–æ–≤.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )
        .add_action("üìÆ –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", "mailing_create")
        .add_action("üìä –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫", "mailings_history")
        .back_button("main")
        .build()
    )

    # –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    settings_menu = (
        MenuBuilder("settings")
        .title("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã")
        .description("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã.")
        .add_action("üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã", "system_status")
        .add_action("üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", "system_config")
        .add_action("üìù –õ–æ–≥–∏", "system_logs")
        .back_button("main")
        .build()
    )

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –º–µ–Ω—é
    for menu in [main_menu, templates_menu, groups_menu, mailing_menu, settings_menu]:
        menu_manager.register_menu(menu)

    logger.info("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ–Ω—é –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")


def get_router(deps) -> Router:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–æ—É—Ç–µ—Ä —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –º–µ–∂–¥—É –º–µ–Ω—é"""
    router = Router()

    @router.callback_query(F.data.startswith("menu_") | F.data == "back")
    async def handle_menu_navigation(callback: types.CallbackQuery):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –º–µ–Ω—é"""
        success = await deps.menu_manager.handle_callback(callback)
        if not success:
            await callback.answer("‚ùå –ú–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", show_alert=True)

    @router.callback_query(F.data == "menu_main")
    async def show_main_menu(callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        await deps.menu_manager.navigate_to("main", callback, callback.from_user.id)

    @router.callback_query(F.data == "menu_templates")
    async def show_templates_menu(callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —à–∞–±–ª–æ–Ω–æ–≤"""
        await deps.menu_manager.navigate_to(
            "templates", callback, callback.from_user.id
        )

    @router.callback_query(F.data == "menu_groups")
    async def show_groups_menu(callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≥—Ä—É–ø–ø"""
        await deps.menu_manager.navigate_to("groups", callback, callback.from_user.id)

    @router.callback_query(F.data == "menu_mailing")
    async def show_mailing_menu(callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Ä–∞—Å—Å—ã–ª–∫–∏"""
        await deps.menu_manager.navigate_to("mailing", callback, callback.from_user.id)

    @router.callback_query(F.data == "menu_settings")
    async def show_settings_menu(callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        await deps.menu_manager.navigate_to("settings", callback, callback.from_user.id)

    return router
