from typing import List
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from .constants import TemplateActions
from .models import TemplateResponse


class TemplateKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤"""

    @staticmethod
    def main_menu() -> InlineKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —à–∞–±–ª–æ–Ω–æ–≤"""
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚ûï –°–æ–∑–¥–∞—Ç—å", callback_data=TemplateActions.CREATE
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üìã –°–ø–∏—Å–æ–∫", callback_data=TemplateActions.LIST
                    )
                ],
                [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="main")],
            ]
        )

    @staticmethod
    def template_list(templates: List[TemplateResponse]) -> InlineKeyboardMarkup:
        """–°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤"""
        buttons = []

        for template in templates:
            icon = "üìé" if template.has_file else "üìÑ"
            name = (
                template.name[:30] + "..." if len(template.name) > 30 else template.name
            )
            buttons.append(
                [
                    InlineKeyboardButton(
                        text=f"{icon} {name}",
                        callback_data=TemplateActions.VIEW.format(template.id),
                    )
                ]
            )

        buttons.extend(
            [
                [
                    InlineKeyboardButton(
                        text="‚ûï –°–æ–∑–¥–∞—Ç—å", callback_data=TemplateActions.CREATE
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=TemplateActions.MENU
                    )
                ],
            ]
        )

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def template_view(template_id: int) -> InlineKeyboardMarkup:
        """–ü—Ä–æ—Å–º–æ—Ç—Ä —à–∞–±–ª–æ–Ω–∞"""
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
                        callback_data=TemplateActions.DELETE.format(template_id),
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É", callback_data=TemplateActions.LIST
                    )
                ],
            ]
        )

    @staticmethod
    def create_flow() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è"""
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=TemplateActions.MENU
                    )
                ]
            ]
        )

    @staticmethod
    def file_options() -> InlineKeyboardMarkup:
        """–û–ø—Ü–∏–∏ –¥–ª—è —Ñ–∞–π–ª–∞"""
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=TemplateActions.SKIP_FILE
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=TemplateActions.MENU
                    )
                ],
            ]
        )

    @staticmethod
    def empty_list() -> InlineKeyboardMarkup:
        """–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤"""
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚ûï –°–æ–∑–¥–∞—Ç—å", callback_data=TemplateActions.CREATE
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=TemplateActions.MENU
                    )
                ],
            ]
        )


class TemplateTexts:
    """–¢–µ–∫—Å—Ç—ã –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤"""

    @staticmethod
    def menu_description() -> str:
        """–û–ø–∏—Å–∞–Ω–∏–µ –º–µ–Ω—é —à–∞–±–ª–æ–Ω–æ–≤"""
        return (
            "üìÑ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏</b>\n\n"
            "–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —à–∞–±–ª–æ–Ω–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )

    @staticmethod
    def list_header(count: int) -> str:
        """–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ø–∏—Å–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤"""
        return (
            f"üìÑ <b>–°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤</b>\n\n"
            f"üìä –ù–∞–π–¥–µ–Ω–æ: {count}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:"
        )

    @staticmethod
    def empty_list() -> str:
        """–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–º —Å–ø–∏—Å–∫–µ"""
        return (
            "üìÑ <b>–°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤</b>\n\n"
            "‚ùå –®–∞–±–ª–æ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n\n"
            "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã."
        )

    @staticmethod
    def create_name_prompt() -> str:
        """–ó–∞–ø—Ä–æ—Å –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏"""
        return (
            "‚ûï <b>–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ (3-100 —Å–∏–º–≤–æ–ª–æ–≤):\n\n"
            '<i>–ù–∞–ø—Ä–∏–º–µ—Ä: "–ü—Ä–∞–π—Å-–ª–∏—Å—Ç –î–µ–∫–∞–±—Ä—å" –∏–ª–∏ "–ê–∫—Ü–∏—è –Ω–µ–¥–µ–ª–∏"</i>'
        )

    @staticmethod
    def create_text_prompt(name: str) -> str:
        """–ó–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏"""
        return (
            f"‚úÖ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {name}\n\n"
            "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞ (10-4000 —Å–∏–º–≤–æ–ª–æ–≤):\n\n"
            "<i>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram</i>"
        )

    @staticmethod
    def create_file_prompt() -> str:
        """–ó–∞–ø—Ä–æ—Å —Ñ–∞–π–ª–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏"""
        return (
            "‚úÖ <b>–¢–µ–∫—Å—Ç –ø—Ä–∏–Ω—è—Ç!</b>\n\n"
            "–•–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª?\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç, –ª–∏–±–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —à–∞–≥:"
        )

    @staticmethod
    def template_created(template: TemplateResponse) -> str:
        """–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —à–∞–±–ª–æ–Ω–µ"""
        file_info = ""
        if template.has_file:
            file_type_text = "–§–æ—Ç–æ" if template.file_type == "photo" else "–î–æ–∫—É–º–µ–Ω—Ç"
            file_info = f"\nüìé <b>–§–∞–π–ª:</b> {file_type_text}"

        return (
            f"‚úÖ <b>–®–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω!</b>\n\n"
            f"üî¢ <b>ID:</b> {template.id}\n"
            f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {template.name}{file_info}"
        )

    @staticmethod
    def template_details(template: TemplateResponse) -> str:
        """–î–µ—Ç–∞–ª–∏ —à–∞–±–ª–æ–Ω–∞"""
        file_info = ""
        if template.has_file:
            file_type_text = "–§–æ—Ç–æ" if template.file_type == "photo" else "–î–æ–∫—É–º–µ–Ω—Ç"
            file_info = f"\nüìé <b>–§–∞–π–ª:</b> {file_type_text}"

        text_preview = (
            template.text[:200] + "..." if len(template.text) > 200 else template.text
        )

        return (
            f"üìÑ <b>–®–∞–±–ª–æ–Ω #{template.id}</b>\n\n"
            f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {template.name}\n\n"
            f"üìÑ <b>–¢–µ–∫—Å—Ç:</b>\n{text_preview}{file_info}\n\n"
            f"üìÖ <b>–°–æ–∑–¥–∞–Ω:</b> {template.created_at}"
        )
