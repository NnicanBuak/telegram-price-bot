#!/usr/bin/env python3
"""
Telegram –±–æ—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤ –ø–æ –≥—Ä—É–ø–ø–∞–º
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –Ω–æ–≤—ã–º aiogram API –∏ –ø–æ–ª–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º
"""

import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage

from config import Config
from database import Database
from menu_system import MenuManager, MenuMiddleware
from bot.menus import setup_bot_menus
from bot.handlers.menu_handlers import menu_router
from bot.handlers.mailing_handlers import mailing_router
from bot.handlers.template_handlers import template_router
from bot.handlers.group_handlers import group_router

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO, format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö
db = None
menu_manager = None
bot_menus = None


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    global db, menu_manager, bot_menus

    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Telegram Price Bot...")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    logger.info("‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    try:
        config = Config()
        logger.info(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ (—Ä–µ–∂–∏–º: {config.environment})")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return

    # –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ —Å –Ω–æ–≤—ã–º API
    logger.info("ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞...")
    try:
        bot = Bot(
            token=config.bot_token,
            default=DefaultBotProperties(
                parse_mode=ParseMode.HTML,
                protect_content=False,
                allow_sending_without_reply=True,
            ),
        )

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info.username} (ID: {bot_info.id})")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞: {e}")
        return

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    logger.info("üì° –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞...")
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    logger.info("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    try:
        db = Database(config.database_url)
        await db.init_db()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
        return

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é
    logger.info("üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é...")
    try:
        menu_manager = MenuManager(admin_ids=config.admin_ids)
        bot_menus = setup_bot_menus(menu_manager, db)
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–Ω—é: {e}")
        return

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ middleware
    logger.info("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ middleware...")
    menu_middleware = MenuMiddleware(menu_manager, db)
    dp.message.middleware(menu_middleware)
    dp.callback_query.middleware(menu_middleware)

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤
    logger.info("üîó –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
    dp.include_router(menu_router)
    dp.include_router(template_router)
    dp.include_router(group_router)
    dp.include_router(mailing_router)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º –æ –∑–∞–ø—É—Å–∫–µ
    if config.send_startup_notifications:
        logger.info("üì® –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–∞–ø—É—Å–∫–µ...")
        for admin_id in config.admin_ids:
            try:
                await bot.send_message(
                    admin_id,
                    "üöÄ <b>Price Bot –∑–∞–ø—É—â–µ–Ω!</b>\n\n"
                    f"ü§ñ –ë–æ—Ç: @{bot_info.username}\n"
                    f"‚öôÔ∏è –†–µ–∂–∏–º: {config.environment}\n"
                    f"üìä –ë–î: {'SQLite' if 'sqlite' in config.database_url else 'PostgreSQL'}\n\n"
                    "‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ",
                )
            except Exception as e:
                logger.warning(
                    f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É {admin_id}: {e}"
                )

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("üéØ –ó–∞–ø—É—Å–∫ polling...")
    try:
        await dp.start_polling(
            bot, allowed_updates=["message", "callback_query"], close_bot_session=True
        )
    except KeyboardInterrupt:
        logger.info("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ –ø–æ Ctrl+C...")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
    finally:
        logger.info("üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
        if config.send_startup_notifications:
            for admin_id in config.admin_ids:
                try:
                    await bot.send_message(
                        admin_id,
                        "‚èπÔ∏è <b>Price Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</b>\n\n" "üîß –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É",
                    )
                except:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏

        await bot.session.close()
        logger.info("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞...")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
