import os
import pytest
import asyncio
from aiogram import Bot
from aiogram.exceptions import TelegramUnauthorizedError, TelegramBadRequest
from dotenv import load_dotenv

load_dotenv()


@pytest.mark.asyncio
@pytest.mark.e2e
async def test_e2e_bot_broadcast():
    token = os.getenv("BOT_TOKEN")
    group_ids_str = os.getenv("TEST_GROUP_IDS", "")

    if not token or not group_ids_str.strip():
        pytest.skip("TEST_GROUP_IDS or BOT_TOKEN not set")

    group_ids = [g.strip() for g in group_ids_str.split(",") if g.strip()]
    if not group_ids:
        pytest.skip("No group IDs provided")

    bot = Bot(token=token, parse_mode="HTML")

    available_groups = []

    for gid in group_ids:
        try:
            chat = await bot.get_chat(gid)
            print(f"[OK] –î–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É {gid}: {chat.title}")
            available_groups.append(gid)
        except TelegramUnauthorizedError:
            print(f"[SKIP] –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É {gid}")
        except TelegramBadRequest:
            print(f"[ERR] –ß–∞—Ç {gid} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        await asyncio.sleep(0.5)  # —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å API

    if not available_groups:
        pytest.skip("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è —Ç–µ—Å—Ç–∞")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–∂–¥—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –≥—Ä—É–ø–ø—É
    for gid in available_groups:
        try:
            await bot.send_message(gid, "üöÄ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (E2E)")
            print(f"[SEND] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {gid}")
        except Exception as e:
            pytest.fail(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ {gid}: {e}")

    # –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
    for gid in available_groups:
        try:
            await bot.send_message(gid, "üì¢ –¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.")
            print(f"[BROADCAST] –£—Å–ø–µ—Ö –≤ {gid}")
        except Exception as e:
            pytest.fail(f"–û—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ –≤ {gid}: {e}")

    await bot.session.close()
