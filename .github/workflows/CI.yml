name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.13]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Create .env for tests
        run: cp .env.example .env || true

      - name: Auto-fix imports and formatting (only latest Python)
        if: matrix.python-version == '3.13'
        run: |
          poetry run ruff check . --fix || true
          poetry run ruff format . || true

      - name: Run linting (only latest Python)
        if: matrix.python-version == '3.13'
        run: poetry run ruff check .

      - name: Type checking (only latest Python)
        if: matrix.python-version == '3.13'
        run: poetry run mypy .

      - name: Run tests
        run: |
          poetry run pytest \
            --junitxml=pytest-${{ matrix.python-version }}.xml \
            --cov=src \
            --cov-report=xml:coverage-${{ matrix.python-version }}.xml

      - name: Upload coverage + junit to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: |
            coverage-${{ matrix.python-version }}.xml
            pytest-${{ matrix.python-version }}.xml
          flags: unittests
          name: python-${{ matrix.python-version }}
          fail_ci_if_error: false

