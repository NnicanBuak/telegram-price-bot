name: Tests and Linting

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        include:
          - python-version: "3.11"
            coverage: true
          - python-version: "3.12"
            coverage: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.8.3

      - name: Cache Poetry packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Create .env for tests
        run: |
          cat > .env << EOF
          TEST_BOT_TOKEN=${{ secrets.TEST_BOT_TOKEN || 'dummy-token' }}
          TEST_ADMIN_IDS=${{ secrets.TEST_ADMIN_IDS || '123456789' }}
          ENVIRONMENT=testing
          LOG_LEVEL=DEBUG
          EOF

      - name: Run linting (only 3.11)
        if: ${{ matrix.python-version == '3.11' }}
        run: |
          poetry run black . --check --diff
          poetry run isort . --check-only --diff
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

      - name: Type checking (only 3.11)
        if: ${{ matrix.python-version == '3.11' }}
        run: poetry run mypy src/ --ignore-missing-imports --no-strict-optional

      - name: Run tests
        run: |
          if [ "${{ matrix.coverage }}" = "true" ]; then
            poetry run pytest tests/ -v --cov=src --cov-report=xml --cov-report=term-missing --junitxml=junit.xml
          else
            poetry run pytest -q
          fi

      - name: Upload junit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: junit.xml

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
